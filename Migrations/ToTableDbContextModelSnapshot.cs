// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ToTable.Models;

#nullable disable

namespace ToTable.Migrations
{
    [DbContext(typeof(ToTableDbContext))]
    partial class ToTableDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ToTable.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("OrderId"));

                    b.Property<string>("OrderComment")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("OrderStatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("OrderTime")
                        .HasColumnType("integer");

                    b.Property<int>("PaymentPayId")
                        .HasColumnType("integer");

                    b.Property<int>("TableTabId")
                        .HasColumnType("integer");

                    b.Property<int>("WaiterId")
                        .HasColumnType("integer");

                    b.HasKey("OrderId");

                    b.HasIndex("PaymentPayId");

                    b.HasIndex("TableTabId");

                    b.HasIndex("WaiterId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("ToTable.Models.OrderItem", b =>
                {
                    b.Property<int>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ItemId"));

                    b.Property<int>("ItemPrice")
                        .HasColumnType("integer");

                    b.Property<int>("ItemQuantity")
                        .HasColumnType("integer");

                    b.Property<int>("OrderId")
                        .HasColumnType("integer");

                    b.Property<int>("ProductId")
                        .HasColumnType("integer");

                    b.HasKey("ItemId");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("Fruits");
                });

            modelBuilder.Entity("ToTable.Models.Payment", b =>
                {
                    b.Property<int>("PayId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PayId"));

                    b.Property<int>("PayCost")
                        .HasColumnType("integer");

                    b.Property<string>("PayMethod")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PayStatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("PayId");

                    b.ToTable("PaymentItems");
                });

            modelBuilder.Entity("ToTable.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ProductId"));

                    b.Property<string>("ProductDescription")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<float>("ProductPrice")
                        .HasColumnType("real");

                    b.Property<string>("ProductStatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ProductId");

                    b.ToTable("ProductItems");
                });

            modelBuilder.Entity("ToTable.Models.Table", b =>
                {
                    b.Property<int>("TabId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("TabId"));

                    b.Property<int>("TabNum")
                        .HasColumnType("integer");

                    b.Property<bool>("TabStatus")
                        .HasColumnType("boolean");

                    b.HasKey("TabId");

                    b.ToTable("TableItems");
                });

            modelBuilder.Entity("ToTable.Models.Waiter", b =>
                {
                    b.Property<int>("WaiterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("WaiterId"));

                    b.Property<string>("WaiterLogin")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("WaiterName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("WaiterPassw")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("WaiterSuma")
                        .HasColumnType("integer");

                    b.HasKey("WaiterId");

                    b.ToTable("WaiterItems");
                });

            modelBuilder.Entity("ToTable.Models.Order", b =>
                {
                    b.HasOne("ToTable.Models.Payment", "Payment")
                        .WithMany()
                        .HasForeignKey("PaymentPayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ToTable.Models.Table", "Table")
                        .WithMany("Orders")
                        .HasForeignKey("TableTabId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ToTable.Models.Waiter", "Waiter")
                        .WithMany()
                        .HasForeignKey("WaiterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Payment");

                    b.Navigation("Table");

                    b.Navigation("Waiter");
                });

            modelBuilder.Entity("ToTable.Models.OrderItem", b =>
                {
                    b.HasOne("ToTable.Models.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ToTable.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ToTable.Models.Table", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
